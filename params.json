{"name":"Tnt","tagline":"Things and tasks to do","body":"# TnT - Things and tasks to do #\r\nLicensed under General Public License v3 (GPLv3)  \r\n[newInstance.org](http://www.newinstance.org), 2012-2014\r\n\r\n## About TnT ##\r\nA simple web task list where you can create, edit and delete tasks. Every task belongs to an owner.\r\nEnglish and German languages are supported.\r\n\r\n## Usage ##\r\n### Setting up the database ###\r\nTnT uses a MySQL database to persist tasks. SO make sure you have a MySQL database service running at standard port 3306. The database is accessed via JNDI lookup so all you need to do is [download a MySQL connector](http://dev.mysql.com/downloads/connector/j/) and place it into the `lib` directory of your Tomcat.\r\nNext you have to add the database resource to your Tomcat server by editing the `context.xml` file in the `conf` directory:\r\n```XML\r\n<Resource name=\"jdbc/tntdb\" auth=\"Container\" type=\"javax.sql.DataSource\"\r\n    maxActive=\"1\" maxIdle=\"1\" maxWait=\"10000\"\r\n    username=\"user\" password=\"pass\" driverClassName=\"com.mysql.jdbc.Driver\"\r\n    url=\"jdbc:mysql://localhost:3306/tntdb\">\r\n</Resource>\r\n```\r\nConnect to MySQL and create a new database with the name `tntdb`.\r\nGrant the user all CRUD privileges on database `tntdb`. In order to have the application create all database tables automatically you have to add privileges `CREATE, ALTER, INDEX, DROP` to the database user as well.\r\n\r\n### Launching the application ###\r\nTo create the war file execute `mvn clean install`. Then start Tomcat and deploy the application.\r\nPoint your browser to `localhost:8080`.\r\n\r\n## Technologies ##\r\nTnT is implemented in Java and uses JSF ([PrimeFaces](http://primefaces.org/)), [Spring](http://spring.io/) and JPA ([Hibernate](http://hibernate.org/)). The application is built by Maven.","google":"UA-48319798-1","note":"Don't delete this file! It's used internally to help with page regeneration."}